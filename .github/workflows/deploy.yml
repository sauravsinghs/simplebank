# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to prodution

on:
  push:
    branches: ["master"]

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v4

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: "v1.31.0"
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Load secrets and save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r 'to_entries|map("\(.key)=\(.value)")|.[]' > app.env

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push $REGISTRY/$REPOSITORY

      - name: Update kube config
        run: aws eks update-kubeconfig --name simple-bank --region ap-south-1

      - name: Debug AWS identity
        run: aws sts get-caller-identity

      - name: Extensive Debug EKS Connectivity
        run: |
          echo "=== AWS Identity ==="
          aws sts get-caller-identity

          echo "=== EKS Cluster Info ==="
          aws eks describe-cluster --name simple-bank --region ap-south-1 --query 'cluster.{status:status,endpoint:endpoint,version:version}' || echo "Failed to describe cluster"

          echo "=== Before kubeconfig update ==="
          kubectl config get-contexts || echo "No contexts before update"

          echo "=== Updating kubeconfig ==="
          aws eks update-kubeconfig --name simple-bank --region ap-south-1 --verbose

          echo "=== After kubeconfig update ==="
          kubectl config get-contexts
          kubectl config current-context

          echo "=== Kubeconfig content ==="
          cat ~/.kube/config

          echo "=== Test basic kubectl ==="
          kubectl version --client
          kubectl version --short || echo "Server version failed"

          echo "=== Test cluster connectivity ==="
          kubectl cluster-info || echo "Cluster info failed"
          kubectl auth can-i get pods || echo "Auth check failed"

          echo "=== Test EKS token generation ==="
          aws eks get-token --cluster-name simple-bank --region ap-south-1 || echo "Token generation failed"

      - name: Update EKS auth config
        run: |
          sed -i "s|simplebank:latest|simplebank:${{ github.sha }}|" eks/deployment.yaml
          kubectl apply -f eks/deployment.yaml
          kubectl apply -f eks/service.yaml
          kubectl apply -f eks/issuer.yaml
          kubectl apply -f eks/ingress.yaml
